import numpy as np
from functions import get_ksi, get_K
from math import exp

# Начальные параметры по вариантам
x_start = 0  # км, начало отрезка
x_end = 106.6  # км, конец отрезка
D = 630  # мм, внешний диаметр
delta = 8  # мм, толщина стенки
roughness = 0.18  # мм, абсолютная шероховатость
rho_20 = 842.4  # кг/м3, плотность при 20 оС
nu_20 = 25  # сСт, кинематическая вязкость при 20 оС
nu_50 = 4.4  # сСт, кинематическая вязкость при 50 оС
p_start = 5.48  # МПА, начальное давление
p_end = 0.92  # МПа, конечное давление
T = 5.8  # оС, температура

# Перевод в систему СИ
x_start = x_start * 1000  # м
x_end = x_end * 1000  # м
D = D / 1000  # м
delta = delta / 1000  # м
roughness = roughness / 1000  # м
nu_20 = nu_20 * 10 ** (-6)  # м2/с
nu_50 = nu_50 * 10 ** (-6)  # м2/с
p_start = p_start * 10 ** 6  # Па
p_end = p_end * 10 ** 6  # Па

# Начальные параметры, задающиеся пользователем
c = input('Введите значение скорость звука (с) - ')  # м/с, скорость звука

if not c:
    c = 1532.3
else:
    c = float(c)

n = input('Введите число сегментов - ')  # число сегментов моделирования

if not n:
    n = 1000
else:
    n = int(n)

dx = (x_end - x_start) / n  # шаг по пространству
dt = int(c / dx)  # шаг по времени

# Стационарная модель
x = np.arange(x_start, x_end + dx, dx).tolist()  # сетка расчетной модели
rho = rho_20 * (1 + get_ksi(rho_20) * (20 - T))  # плотность при расчетной температуре
nu = nu_20 * exp(-get_K(nu_20, nu_50, 20, 50) * (T - 20))  # вязкость при расчетной температуре
d = D - 2 * delta  # внутренний диаметр
L = x_start - x_end  # длина трубы
